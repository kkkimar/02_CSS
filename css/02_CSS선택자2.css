/* css 파일은 style 태그 내부에 작성한다 생각하고 코딩하면 된다. */

  /* h1 태그 글자색 red */
  h1{color: red;}

  code{
    background-color: lightgrey;
    font-weight: bold; /* 글자 두껍게 */
    display: block; /* block 형식으로 변경 */
  }

  /* -----------기본속성 선택자 -------------- */

  /* div태그 중 name 속성 값이 "name-1"인 요소에 배경색 green */

  div[name="name-1"]{
    background-color: green;
  }

/* div 태그 중 name 속성의 값이 name-2인 요소만 선택 */

div[name="name-2"]{
    background-color: yellow;
}

/* 모든 div 요소의 글자색을 gray로 변경 */

div{
    color: grey;
}

/* p 태그 중 data 속성의 값이 "data-1"인 요소만 배경색 red */

p[data="data-1"]{
    background-color: red;
}

/* 내용이 p3, p4인 요소를 선택해 배경색 blue */

p[data="data-2"]{
    background-color: blue;
}

/* 모든 요소(*) 중 name 속성 값이 "name-1"인 요소 글자 크기 30px */
/* == div1, div2, p2, p3 선택 */
/* *[name="name-1"]{
    font-size: 30px;
} */

/* 모든요소(*)는 생략가능 */
/* == name 속성 값이 "name-1"인 요소 모두 선택 */
[name="name-1"]{
    font-size: 30px;
}


/* ---- 자식 선택자 (>) ----- */
#parent1 {background-color: skyblue;}
#parent1 > li{background-color: gold;}

/* 선택자를 연이어 작성할 수 있다!! */
/* 자식2, 자식4 의 글자색을 red */
#parent1 > li > span {color: red;}

/* ---------후손 선택자 ------------ */
/* 아이디가 paarent2인 요소에 후손 중 모든 p */
#parent2 p {background-color: lightgreen;}

/* #parent2 > div > p{color: blue;} */
/* 위와 같은 표현 */
#parent2  div  p{color: blue;}

/* 반응 선택자 */
.test-div{
    /* 3px 실선 검정색 */
    border: 3px solid black;
    width: 200px;

    /* 배경색 #ddd (16진수) */
    height: 200px;background-color: #ddd;

    /* 아래쪽 요소와 30px만큼 간격 추가 */
    margin-bottom: 30px;

    /* 마우스 커서를 손가락 모양으로 변경 */
    cursor: pointer;
}
/* #activeBox가 클릭되고 있을 때 */
#activeBox:active{
    background-color: yellow;
}

/* #hoverBox에 마우스가 올라왔을 때 */
#hoverBox:hover{
    background-image:url(../images/cats/cat3.jpg);
    background-size: cover;
}

/* 상태 선택자 */
/* focus */
#input1:focus{

    /* 초점이 맞춰졌을 때 요소 바깥에 생기는 선 */
    outline-color: greenyellow;
}

#input1{
    /* 요소의 기분 테두리 */
    border-color: red ;
}

/* :checked */
#input2:checked{
    width: 30px;
    height: 30px;
    background-color: red; 
    /*radio, checkbox 선택 시 보이는 표시는 배경이 아님 이미지이기 때문에 
    배경색이 적용되지 않음 */
}

/* :enabled / :disabled */
.input3:enabled{background-color: skyblue;}
.input3:disabled{background-color: lightcoral;}

/* --------- 동위 선택자 ----------------*/
/*  +: 바로 뒤 형제요소 하나 */
#div1 + div {
    background: yellow;
}

/*  ~ : 뒤에 존재하는 형제 요소 중 일치하는 요소 */
#div3 ~ div{
    background-color: springgreen;
}

/* 체크박스 만들기 */

/* 1. label 요소를 체크박스 모양으로 만들기 */
#check + label{
    /* label은 인라인 속성이므로 너비 높이 가질 수 없음 */
    display: inline-block; /* 크기 지정O, 한 줄에 배치(수평 분할 */
    width: 30px;
    height: 30px;
    border: 1px solid black;
    cursor: pointer;
    border-radius: 20%;

    /* 사용자가 선택(블럭)을 못하기 함 ex블로그 같은 곳에 못 긁게 막는 거 */
    user-select: none;
}

/* 2. 체크박스가 체크 되었을 때 label에 체크박스 이미지 표시 */
#check:checked + label{
    background-image: url('../images/checkbox.png');
    background-size: cover; /* 이미지 크기를 요소에 맞춰라 */
}

/* 3. 체크박스를 존재는 하지만 보이지 않게 처리 */
#check{
    display: none; /* 화면에 존재는 함 단, 눈에만 안보이게 처리 */
}